#!/usr/bin/ksh
#   Copyright 2012-2022 -- Michael Felt, AIXTools
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

verbose=0
[[ $1 == "-verbose" ]] && verbose=1
[[ $1 == "--verbose" ]] && verbose=2 && set -x

reexec=$2

[[ -x buildaix/bin/aixinfo  && ! -z ${reexec} ]] && exec buildaix/bin/aixinfo $1 1

basedir=$(pwd)
SUBDIR=${basedir%/*}
DIRNAME=${basedir##*/}

# If the direct sub-directory is "static" then overwrite PROGRAM to 'static'
# the intent is that the package contains static libraries only
# e.g., /data/prj/gnu/static/gettext-X.Y.Z becomes:
# static.gnu.gettext.X.Y.Z.0.I

product=${SUBDIR##*/}
if [[ ${product} == "static" ]]; then
    export PROGRAM="static"
    SUBDIR="${SUBDIR%/*}"
    product=${SUBDIR##*/}
fi

# fileset is the dirname upto the last '-' character
fileset=${DIRNAME%%-[0-9]*}

# version1 is text after stripping ${fileset}
# version is version1 less the leading '-' character
version1=${DIRNAME#${fileset}}
version=${version1#-}

# some versioning systems use 'b' for beta, 'p' for portable
# extract that 'label'
echo ${version} | awk -Fp ' { print $1, $2 } ' | read version portable
echo ${version} | awk -Fb ' { print $1, $2 } ' | read version beta

## my projects directory is /data/prj - I do not want prj as PRODUCT
if [[ ${product} == ${fileset} ]] ; then
    SUBDIR=${SUBDIR%/*}
                if [[ ${SUBDIR##*/} != "prj" ]]; then
        product=${SUBDIR##*/}
    fi
fi

fix=0
# look for p in name - openssh/openssl are most common examples
# There are more variations to be picked up in the future.
if [[ ! -z ${portable} ]]; then
    p=1600
    let fix=${p}+${portable}
elif [[ ! -z ${beta} ]]; then
    p=200
    let fix=${p}+${beta}
fi

cnt=`echo ${version} | awk -F. ' { print NF } '`

case "$cnt" in
    0) vrm=1.0.0 ;;
    1) vrm=$version.0.0 ;;
    2) vrm=$version.0 ;;
    3) vrm=$version ;;
    4) fix=`echo ${version} | cut -d. -s -f4`
         vrm=`echo ${version} | cut -d. -s -f1-3`
         ;;
    *) echo VERSION parsing error ::$version:: - edit aixinfo
         exit -1
esac

PROGRAM=${PROGRAM-"buildaix"}
PRODUCT=${PRODUCT-${product}}
FILESET=${FILESET-${fileset}}
VRMF=${VRMF-${vrm}.${fix}}

if [[ ${verbose} -ne 0 ]]
then 
    print aixinfo FILESET: ${FILESET}
    print aixinfo computed: Version.Release.Maintenance.Fix ${vrm}.${fix}
    print aixinfo LPP NAME: ${PROGRAM}.${PRODUCT}.${FILESET}.${VRMF}
fi
